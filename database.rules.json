{
  "rules": {
    "config": {
      ".read": true,
      ".write": "auth != null && root.child('admins').child(auth.uid).child('isAdmin').val() === true"
    },
    "orders": {
      "$orderId": {
        ".read": "auth != null && (data.child('buyerUID').val() === auth.uid || root.child('admins').child(auth.uid).child('isAdmin').val() === true)",
        ".write": "auth != null && ((!data.exists() && newData.child('buyerUID').val() === auth.uid) || root.child('admins').child(auth.uid).child('isAdmin').val() === true)",
        ".validate": "newData.hasChildren(['orderId', 'buyerUID', 'buyerEmail', 'category', 'timestamp'])"
      }
    },
    "admins": {
      ".read": "auth != null && data.child(auth.uid).child('isAdmin').val() === true",
      ".write": "auth != null && data.child(auth.uid).child('isAdmin').val() === true"
    },
    "cs_sessions": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid"
      }
    },
    "tickets": {
      "$ticketId": {
        ".read": "auth != null && (data.child('userId').val() === auth.uid || root.child('admins').child(auth.uid).child('isAdmin').val() === true)",
        ".write": "auth != null && ((!data.exists() && newData.child('userId').val() === auth.uid) || root.child('admins').child(auth.uid).child('isAdmin').val() === true)"
      }
    },
    "kb": {
      ".read": true,
      ".write": "auth != null && root.child('admins').child(auth.uid).child('isAdmin').val() === true"
    },
    ".read": false,
    ".write": false
  }
}
